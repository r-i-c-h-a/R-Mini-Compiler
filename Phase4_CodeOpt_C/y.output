Grammar

    0 $accept: start $end

    1 start: exprlist

    2 exprlist: %empty
    3         | expr_or_assign
    4         | exprlist SEMICOLON expr_or_assign
    5         | exprlist SEMICOLON
    6         | exprlist NEWLINE expr_or_assign
    7         | exprlist NEWLINE

    8 expr_or_assign: expr
    9               | equal_assign
   10               | loop_statement
   11               | if_statement
   12               | print_statement

   13 @1: %empty

   14 if_statement: IF ifcond @1 expr_or_assign

   15 $@2: %empty

   16 if_statement: ELSE $@2 expr_or_assign

   17 $@3: %empty

   18 loop_statement: FOR forcond $@3 expr_or_assign

   19 @4: %empty

   20 loop_statement: WHILE cond @4 expr_or_assign

   21 equal_assign: SYMBOL EQ_ASSIGN expr

   22 print_statement: PRINT_ expr RIGHT_PAREN

   23 cond: LEFT_PAREN expr RIGHT_PAREN
   24     | LEFT_PAREN expr RIGHT_PAREN NEWLINE

   25 ifcond: LEFT_PAREN expr RIGHT_PAREN
   26       | LEFT_PAREN expr RIGHT_PAREN NEWLINE

   27 forcond: LEFT_PAREN SYMBOL IN expr COLON expr RIGHT_PAREN
   28        | LEFT_PAREN SYMBOL IN expr COLON expr RIGHT_PAREN NEWLINE

   29 expr: SYMBOL
   30     | NUM_CONST
   31     | STR_CONST
   32     | LEFT_CURLY exprlist RIGHT_CURLY
   33     | LEFT_PAREN expr_or_assign RIGHT_PAREN
   34     | expr COLON expr
   35     | expr PLUS expr
   36     | expr MINUS expr
   37     | expr STAR expr
   38     | expr FSLASH expr
   39     | expr LT expr
   40     | expr LE expr
   41     | expr EQ expr
   42     | expr NE expr
   43     | expr GE expr
   44     | expr GT expr
   45     | expr AND2 expr
   46     | expr OR2 expr
   47     | SYMBOL LEFT_ASSIGN expr


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM_CONST (258) 30
STR_CONST (259) 31
SYMBOL (260) 21 27 28 29 47
LT (261) 39
LE (262) 40
EQ (263) 41
NE (264) 42
GE (265) 43
GT (266) 44
AND2 (267) 45
OR2 (268) 46
LEFT_ASSIGN (269) 47
EQ_ASSIGN (270) 21
IF (271) 14
ELSE (272) 16
FOR (273) 18
WHILE (274) 20
IN (275) 27 28
PRINT_ (276) 22
NEWLINE (277) 6 7 24 26 28
PLUS (278) 35
MINUS (279) 36
STAR (280) 37
FSLASH (281) 38
SEMICOLON (282) 4 5
COLON (283) 27 28 34
LEFT_PAREN (284) 23 24 25 26 27 28 33
RIGHT_PAREN (285) 22 23 24 25 26 27 28 33
LEFT_CURLY (286) 32
RIGHT_CURLY (287) 32


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
start (34)
    on left: 1, on right: 0
exprlist (35)
    on left: 2 3 4 5 6 7, on right: 1 4 5 6 7 32
expr_or_assign (36)
    on left: 8 9 10 11 12, on right: 3 4 6 14 16 18 20 33
if_statement (37)
    on left: 14 16, on right: 11
@1 (38)
    on left: 13, on right: 14
$@2 (39)
    on left: 15, on right: 16
loop_statement (40)
    on left: 18 20, on right: 10
$@3 (41)
    on left: 17, on right: 18
@4 (42)
    on left: 19, on right: 20
equal_assign (43)
    on left: 21, on right: 9
print_statement (44)
    on left: 22, on right: 12
cond (45)
    on left: 23 24, on right: 20
ifcond (46)
    on left: 25 26, on right: 14
forcond (47)
    on left: 27 28, on right: 18
expr (48)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47, on right: 8 21 22 23 24 25 26 27 28 34 35 36 37 38 39 40 41
    42 43 44 45 46 47


State 0

    0 $accept: . start $end

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    $default  reduce using rule 2 (exprlist)

    start            go to state 11
    exprlist         go to state 12
    expr_or_assign   go to state 13
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 1

   30 expr: NUM_CONST .

    $default  reduce using rule 30 (expr)


State 2

   31 expr: STR_CONST .

    $default  reduce using rule 31 (expr)


State 3

   21 equal_assign: SYMBOL . EQ_ASSIGN expr
   29 expr: SYMBOL .
   47     | SYMBOL . LEFT_ASSIGN expr

    LEFT_ASSIGN  shift, and go to state 19
    EQ_ASSIGN    shift, and go to state 20

    $default  reduce using rule 29 (expr)


State 4

   14 if_statement: IF . ifcond @1 expr_or_assign

    LEFT_PAREN  shift, and go to state 21

    ifcond  go to state 22


State 5

   16 if_statement: ELSE . $@2 expr_or_assign

    $default  reduce using rule 15 ($@2)

    $@2  go to state 23


State 6

   18 loop_statement: FOR . forcond $@3 expr_or_assign

    LEFT_PAREN  shift, and go to state 24

    forcond  go to state 25


State 7

   20 loop_statement: WHILE . cond @4 expr_or_assign

    LEFT_PAREN  shift, and go to state 26

    cond  go to state 27


State 8

   22 print_statement: PRINT_ . expr RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 29


State 9

   33 expr: LEFT_PAREN . expr_or_assign RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr_or_assign   go to state 30
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 10

   32 expr: LEFT_CURLY . exprlist RIGHT_CURLY

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    $default  reduce using rule 2 (exprlist)

    exprlist         go to state 31
    expr_or_assign   go to state 13
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 11

    0 $accept: start . $end

    $end  shift, and go to state 32


State 12

    1 start: exprlist .
    4 exprlist: exprlist . SEMICOLON expr_or_assign
    5         | exprlist . SEMICOLON
    6         | exprlist . NEWLINE expr_or_assign
    7         | exprlist . NEWLINE

    NEWLINE    shift, and go to state 33
    SEMICOLON  shift, and go to state 34

    $default  reduce using rule 1 (start)


State 13

    3 exprlist: expr_or_assign .

    $default  reduce using rule 3 (exprlist)


State 14

   11 expr_or_assign: if_statement .

    $default  reduce using rule 11 (expr_or_assign)


State 15

   10 expr_or_assign: loop_statement .

    $default  reduce using rule 10 (expr_or_assign)


State 16

    9 expr_or_assign: equal_assign .

    $default  reduce using rule 9 (expr_or_assign)


State 17

   12 expr_or_assign: print_statement .

    $default  reduce using rule 12 (expr_or_assign)


State 18

    8 expr_or_assign: expr .
   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    LT      shift, and go to state 35
    LE      shift, and go to state 36
    EQ      shift, and go to state 37
    NE      shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    AND2    shift, and go to state 41
    OR2     shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    $default  reduce using rule 8 (expr_or_assign)


State 19

   47 expr: SYMBOL LEFT_ASSIGN . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 48


State 20

   21 equal_assign: SYMBOL EQ_ASSIGN . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 49


State 21

   25 ifcond: LEFT_PAREN . expr RIGHT_PAREN
   26       | LEFT_PAREN . expr RIGHT_PAREN NEWLINE

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 50


State 22

   14 if_statement: IF ifcond . @1 expr_or_assign

    $default  reduce using rule 13 (@1)

    @1  go to state 51


State 23

   16 if_statement: ELSE $@2 . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr_or_assign   go to state 52
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 24

   27 forcond: LEFT_PAREN . SYMBOL IN expr COLON expr RIGHT_PAREN
   28        | LEFT_PAREN . SYMBOL IN expr COLON expr RIGHT_PAREN NEWLINE

    SYMBOL  shift, and go to state 53


State 25

   18 loop_statement: FOR forcond . $@3 expr_or_assign

    $default  reduce using rule 17 ($@3)

    $@3  go to state 54


State 26

   23 cond: LEFT_PAREN . expr RIGHT_PAREN
   24     | LEFT_PAREN . expr RIGHT_PAREN NEWLINE

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 55


State 27

   20 loop_statement: WHILE cond . @4 expr_or_assign

    $default  reduce using rule 19 (@4)

    @4  go to state 56


State 28

   29 expr: SYMBOL .
   47     | SYMBOL . LEFT_ASSIGN expr

    LEFT_ASSIGN  shift, and go to state 19

    $default  reduce using rule 29 (expr)


State 29

   22 print_statement: PRINT_ expr . RIGHT_PAREN
   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    LT           shift, and go to state 35
    LE           shift, and go to state 36
    EQ           shift, and go to state 37
    NE           shift, and go to state 38
    GE           shift, and go to state 39
    GT           shift, and go to state 40
    AND2         shift, and go to state 41
    OR2          shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    FSLASH       shift, and go to state 46
    COLON        shift, and go to state 47
    RIGHT_PAREN  shift, and go to state 57


State 30

   33 expr: LEFT_PAREN expr_or_assign . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 58


State 31

    4 exprlist: exprlist . SEMICOLON expr_or_assign
    5         | exprlist . SEMICOLON
    6         | exprlist . NEWLINE expr_or_assign
    7         | exprlist . NEWLINE
   32 expr: LEFT_CURLY exprlist . RIGHT_CURLY

    NEWLINE      shift, and go to state 33
    SEMICOLON    shift, and go to state 34
    RIGHT_CURLY  shift, and go to state 59


State 32

    0 $accept: start $end .

    $default  accept


State 33

    6 exprlist: exprlist NEWLINE . expr_or_assign
    7         | exprlist NEWLINE .

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    $default  reduce using rule 7 (exprlist)

    expr_or_assign   go to state 60
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 34

    4 exprlist: exprlist SEMICOLON . expr_or_assign
    5         | exprlist SEMICOLON .

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    $default  reduce using rule 5 (exprlist)

    expr_or_assign   go to state 61
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 35

   39 expr: expr LT . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 62


State 36

   40 expr: expr LE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 63


State 37

   41 expr: expr EQ . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 64


State 38

   42 expr: expr NE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 65


State 39

   43 expr: expr GE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 66


State 40

   44 expr: expr GT . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 67


State 41

   45 expr: expr AND2 . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 68


State 42

   46 expr: expr OR2 . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 69


State 43

   35 expr: expr PLUS . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 70


State 44

   36 expr: expr MINUS . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 71


State 45

   37 expr: expr STAR . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 72


State 46

   38 expr: expr FSLASH . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 73


State 47

   34 expr: expr COLON . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 74


State 48

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr
   47     | SYMBOL LEFT_ASSIGN expr .

    LT      shift, and go to state 35
    LE      shift, and go to state 36
    EQ      shift, and go to state 37
    NE      shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    AND2    shift, and go to state 41
    OR2     shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    $default  reduce using rule 47 (expr)


State 49

   21 equal_assign: SYMBOL EQ_ASSIGN expr .
   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    LT      shift, and go to state 35
    LE      shift, and go to state 36
    EQ      shift, and go to state 37
    NE      shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    AND2    shift, and go to state 41
    OR2     shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    $default  reduce using rule 21 (equal_assign)


State 50

   25 ifcond: LEFT_PAREN expr . RIGHT_PAREN
   26       | LEFT_PAREN expr . RIGHT_PAREN NEWLINE
   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    LT           shift, and go to state 35
    LE           shift, and go to state 36
    EQ           shift, and go to state 37
    NE           shift, and go to state 38
    GE           shift, and go to state 39
    GT           shift, and go to state 40
    AND2         shift, and go to state 41
    OR2          shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    FSLASH       shift, and go to state 46
    COLON        shift, and go to state 47
    RIGHT_PAREN  shift, and go to state 75


State 51

   14 if_statement: IF ifcond @1 . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr_or_assign   go to state 76
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 52

   16 if_statement: ELSE $@2 expr_or_assign .

    $default  reduce using rule 16 (if_statement)


State 53

   27 forcond: LEFT_PAREN SYMBOL . IN expr COLON expr RIGHT_PAREN
   28        | LEFT_PAREN SYMBOL . IN expr COLON expr RIGHT_PAREN NEWLINE

    IN  shift, and go to state 77


State 54

   18 loop_statement: FOR forcond $@3 . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr_or_assign   go to state 78
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 55

   23 cond: LEFT_PAREN expr . RIGHT_PAREN
   24     | LEFT_PAREN expr . RIGHT_PAREN NEWLINE
   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    LT           shift, and go to state 35
    LE           shift, and go to state 36
    EQ           shift, and go to state 37
    NE           shift, and go to state 38
    GE           shift, and go to state 39
    GT           shift, and go to state 40
    AND2         shift, and go to state 41
    OR2          shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    FSLASH       shift, and go to state 46
    COLON        shift, and go to state 47
    RIGHT_PAREN  shift, and go to state 79


State 56

   20 loop_statement: WHILE cond @4 . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    PRINT_      shift, and go to state 8
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr_or_assign   go to state 80
    if_statement     go to state 14
    loop_statement   go to state 15
    equal_assign     go to state 16
    print_statement  go to state 17
    expr             go to state 18


State 57

   22 print_statement: PRINT_ expr RIGHT_PAREN .

    $default  reduce using rule 22 (print_statement)


State 58

   33 expr: LEFT_PAREN expr_or_assign RIGHT_PAREN .

    $default  reduce using rule 33 (expr)


State 59

   32 expr: LEFT_CURLY exprlist RIGHT_CURLY .

    $default  reduce using rule 32 (expr)


State 60

    6 exprlist: exprlist NEWLINE expr_or_assign .

    $default  reduce using rule 6 (exprlist)


State 61

    4 exprlist: exprlist SEMICOLON expr_or_assign .

    $default  reduce using rule 4 (exprlist)


State 62

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   39     | expr LT expr .
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 39 (expr)


State 63

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   40     | expr LE expr .
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 40 (expr)


State 64

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   41     | expr EQ expr .
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 41 (expr)


State 65

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   42     | expr NE expr .
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 42 (expr)


State 66

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   43     | expr GE expr .
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 43 (expr)


State 67

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   44     | expr GT expr .
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 44 (expr)


State 68

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   45     | expr AND2 expr .
   46     | expr . OR2 expr

    LT      shift, and go to state 35
    LE      shift, and go to state 36
    EQ      shift, and go to state 37
    NE      shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    $default  reduce using rule 45 (expr)


State 69

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr
   46     | expr OR2 expr .

    LT      shift, and go to state 35
    LE      shift, and go to state 36
    EQ      shift, and go to state 37
    NE      shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    AND2    shift, and go to state 41
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    $default  reduce using rule 46 (expr)


State 70

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   35     | expr PLUS expr .
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    $default  reduce using rule 35 (expr)


State 71

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   36     | expr MINUS expr .
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 47

    $default  reduce using rule 36 (expr)


State 72

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   37     | expr STAR expr .
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    COLON  shift, and go to state 47

    $default  reduce using rule 37 (expr)


State 73

   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   38     | expr FSLASH expr .
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    COLON  shift, and go to state 47

    $default  reduce using rule 38 (expr)


State 74

   34 expr: expr . COLON expr
   34     | expr COLON expr .
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    $default  reduce using rule 34 (expr)


State 75

   25 ifcond: LEFT_PAREN expr RIGHT_PAREN .
   26       | LEFT_PAREN expr RIGHT_PAREN . NEWLINE

    NEWLINE  shift, and go to state 81

    $default  reduce using rule 25 (ifcond)


State 76

   14 if_statement: IF ifcond @1 expr_or_assign .

    $default  reduce using rule 14 (if_statement)


State 77

   27 forcond: LEFT_PAREN SYMBOL IN . expr COLON expr RIGHT_PAREN
   28        | LEFT_PAREN SYMBOL IN . expr COLON expr RIGHT_PAREN NEWLINE

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 82


State 78

   18 loop_statement: FOR forcond $@3 expr_or_assign .

    $default  reduce using rule 18 (loop_statement)


State 79

   23 cond: LEFT_PAREN expr RIGHT_PAREN .
   24     | LEFT_PAREN expr RIGHT_PAREN . NEWLINE

    NEWLINE  shift, and go to state 83

    $default  reduce using rule 23 (cond)


State 80

   20 loop_statement: WHILE cond @4 expr_or_assign .

    $default  reduce using rule 20 (loop_statement)


State 81

   26 ifcond: LEFT_PAREN expr RIGHT_PAREN NEWLINE .

    $default  reduce using rule 26 (ifcond)


State 82

   27 forcond: LEFT_PAREN SYMBOL IN expr . COLON expr RIGHT_PAREN
   28        | LEFT_PAREN SYMBOL IN expr . COLON expr RIGHT_PAREN NEWLINE
   34 expr: expr . COLON expr
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    LT      shift, and go to state 35
    LE      shift, and go to state 36
    EQ      shift, and go to state 37
    NE      shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    AND2    shift, and go to state 41
    OR2     shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    STAR    shift, and go to state 45
    FSLASH  shift, and go to state 46
    COLON   shift, and go to state 84


State 83

   24 cond: LEFT_PAREN expr RIGHT_PAREN NEWLINE .

    $default  reduce using rule 24 (cond)


State 84

   27 forcond: LEFT_PAREN SYMBOL IN expr COLON . expr RIGHT_PAREN
   28        | LEFT_PAREN SYMBOL IN expr COLON . expr RIGHT_PAREN NEWLINE
   34 expr: expr COLON . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 28
    LEFT_PAREN  shift, and go to state 9
    LEFT_CURLY  shift, and go to state 10

    expr  go to state 85


State 85

   27 forcond: LEFT_PAREN SYMBOL IN expr COLON expr . RIGHT_PAREN
   28        | LEFT_PAREN SYMBOL IN expr COLON expr . RIGHT_PAREN NEWLINE
   34 expr: expr . COLON expr
   34     | expr COLON expr .
   35     | expr . PLUS expr
   36     | expr . MINUS expr
   37     | expr . STAR expr
   38     | expr . FSLASH expr
   39     | expr . LT expr
   40     | expr . LE expr
   41     | expr . EQ expr
   42     | expr . NE expr
   43     | expr . GE expr
   44     | expr . GT expr
   45     | expr . AND2 expr
   46     | expr . OR2 expr

    RIGHT_PAREN  shift, and go to state 86

    $default  reduce using rule 34 (expr)


State 86

   27 forcond: LEFT_PAREN SYMBOL IN expr COLON expr RIGHT_PAREN .
   28        | LEFT_PAREN SYMBOL IN expr COLON expr RIGHT_PAREN . NEWLINE

    NEWLINE  shift, and go to state 87

    $default  reduce using rule 27 (forcond)


State 87

   28 forcond: LEFT_PAREN SYMBOL IN expr COLON expr RIGHT_PAREN NEWLINE .

    $default  reduce using rule 28 (forcond)
