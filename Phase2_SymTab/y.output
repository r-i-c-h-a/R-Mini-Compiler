Grammar

    0 $accept: start $end

    1 start: exprlist

    2 exprlist: %empty
    3         | expr_or_assign
    4         | exprlist SEMICOLON expr_or_assign
    5         | exprlist SEMICOLON
    6         | exprlist NEWLINE expr_or_assign
    7         | exprlist NEWLINE
    8         | exprlist NEWLINE print_statement
    9         | exprlist SEMICOLON print_statement
   10         | print_statement

   11 expr_or_assign: expr
   12               | equal_assign
   13               | statement

   14 statement: IF ifcond expr_or_assign
   15          | IF ifcond expr_or_assign ELSE expr_or_assign
   16          | FOR forcond expr_or_assign
   17          | WHILE cond expr_or_assign

   18 equal_assign: SYMBOL EQ_ASSIGN expr_or_assign

   19 print_statement: PRINT_ expr RIGHT_PAREN

   20 cond: LEFT_PAREN expr RIGHT_PAREN
   21     | LEFT_PAREN expr RIGHT_PAREN NEWLINE

   22 ifcond: LEFT_PAREN expr RIGHT_PAREN
   23       | LEFT_PAREN expr RIGHT_PAREN NEWLINE

   24 forcond: LEFT_PAREN SYMBOL IN expr RIGHT_PAREN
   25        | LEFT_PAREN SYMBOL IN expr RIGHT_PAREN NEWLINE

   26 expr: SYMBOL
   27     | NUM_CONST
   28     | STR_CONST
   29     | LEFT_CURLY exprlist RIGHT_CURLY
   30     | LEFT_PAREN expr_or_assign RIGHT_PAREN
   31     | expr COLON expr
   32     | expr PLUS expr
   33     | expr MINUS expr
   34     | expr STAR expr
   35     | expr FSLASH expr
   36     | expr LT expr
   37     | expr LE expr
   38     | expr EQ expr
   39     | expr NE expr
   40     | expr GE expr
   41     | expr GT expr
   42     | expr AND2 expr
   43     | expr OR2 expr
   44     | SYMBOL LEFT_ASSIGN expr


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM_CONST (258) 27
STR_CONST (259) 28
SYMBOL (260) 18 24 25 26 44
LT (261) 36
LE (262) 37
EQ (263) 38
NE (264) 39
GE (265) 40
GT (266) 41
AND2 (267) 42
OR2 (268) 43
LEFT_ASSIGN (269) 44
EQ_ASSIGN (270) 18
IF (271) 14 15
ELSE (272) 15
FOR (273) 16
WHILE (274) 17
IN (275) 24 25
PRINT_ (276) 19
NEWLINE (277) 6 7 8 21 23 25
PLUS (278) 32
MINUS (279) 33
STAR (280) 34
FSLASH (281) 35
SEMICOLON (282) 4 5 9
COLON (283) 31
LEFT_PAREN (284) 20 21 22 23 24 25 30
RIGHT_PAREN (285) 19 20 21 22 23 24 25 30
LEFT_CURLY (286) 29
RIGHT_CURLY (287) 29


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
start (34)
    on left: 1, on right: 0
exprlist (35)
    on left: 2 3 4 5 6 7 8 9 10, on right: 1 4 5 6 7 8 9 29
expr_or_assign (36)
    on left: 11 12 13, on right: 3 4 6 14 15 16 17 18 30
statement (37)
    on left: 14 15 16 17, on right: 13
equal_assign (38)
    on left: 18, on right: 12
print_statement (39)
    on left: 19, on right: 8 9 10
cond (40)
    on left: 20 21, on right: 17
ifcond (41)
    on left: 22 23, on right: 14 15
forcond (42)
    on left: 24 25, on right: 16
expr (43)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
    44, on right: 11 19 20 21 22 23 24 25 31 32 33 34 35 36 37 38 39
    40 41 42 43 44


State 0

    0 $accept: . start $end

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    PRINT_      shift, and go to state 7
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    $default  reduce using rule 2 (exprlist)

    start            go to state 10
    exprlist         go to state 11
    expr_or_assign   go to state 12
    statement        go to state 13
    equal_assign     go to state 14
    print_statement  go to state 15
    expr             go to state 16


State 1

   27 expr: NUM_CONST .

    $default  reduce using rule 27 (expr)


State 2

   28 expr: STR_CONST .

    $default  reduce using rule 28 (expr)


State 3

   18 equal_assign: SYMBOL . EQ_ASSIGN expr_or_assign
   26 expr: SYMBOL .
   44     | SYMBOL . LEFT_ASSIGN expr

    LEFT_ASSIGN  shift, and go to state 17
    EQ_ASSIGN    shift, and go to state 18

    $default  reduce using rule 26 (expr)


State 4

   14 statement: IF . ifcond expr_or_assign
   15          | IF . ifcond expr_or_assign ELSE expr_or_assign

    LEFT_PAREN  shift, and go to state 19

    ifcond  go to state 20


State 5

   16 statement: FOR . forcond expr_or_assign

    LEFT_PAREN  shift, and go to state 21

    forcond  go to state 22


State 6

   17 statement: WHILE . cond expr_or_assign

    LEFT_PAREN  shift, and go to state 23

    cond  go to state 24


State 7

   19 print_statement: PRINT_ . expr RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 26


State 8

   30 expr: LEFT_PAREN . expr_or_assign RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 27
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 9

   29 expr: LEFT_CURLY . exprlist RIGHT_CURLY

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    PRINT_      shift, and go to state 7
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    $default  reduce using rule 2 (exprlist)

    exprlist         go to state 28
    expr_or_assign   go to state 12
    statement        go to state 13
    equal_assign     go to state 14
    print_statement  go to state 15
    expr             go to state 16


State 10

    0 $accept: start . $end

    $end  shift, and go to state 29


State 11

    1 start: exprlist .
    4 exprlist: exprlist . SEMICOLON expr_or_assign
    5         | exprlist . SEMICOLON
    6         | exprlist . NEWLINE expr_or_assign
    7         | exprlist . NEWLINE
    8         | exprlist . NEWLINE print_statement
    9         | exprlist . SEMICOLON print_statement

    NEWLINE    shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    $default  reduce using rule 1 (start)


State 12

    3 exprlist: expr_or_assign .

    $default  reduce using rule 3 (exprlist)


State 13

   13 expr_or_assign: statement .

    $default  reduce using rule 13 (expr_or_assign)


State 14

   12 expr_or_assign: equal_assign .

    $default  reduce using rule 12 (expr_or_assign)


State 15

   10 exprlist: print_statement .

    $default  reduce using rule 10 (exprlist)


State 16

   11 expr_or_assign: expr .
   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    LT      shift, and go to state 32
    LE      shift, and go to state 33
    EQ      shift, and go to state 34
    NE      shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    AND2    shift, and go to state 38
    OR2     shift, and go to state 39
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    $default  reduce using rule 11 (expr_or_assign)


State 17

   44 expr: SYMBOL LEFT_ASSIGN . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 45


State 18

   18 equal_assign: SYMBOL EQ_ASSIGN . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 46
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 19

   22 ifcond: LEFT_PAREN . expr RIGHT_PAREN
   23       | LEFT_PAREN . expr RIGHT_PAREN NEWLINE

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 47


State 20

   14 statement: IF ifcond . expr_or_assign
   15          | IF ifcond . expr_or_assign ELSE expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 48
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 21

   24 forcond: LEFT_PAREN . SYMBOL IN expr RIGHT_PAREN
   25        | LEFT_PAREN . SYMBOL IN expr RIGHT_PAREN NEWLINE

    SYMBOL  shift, and go to state 49


State 22

   16 statement: FOR forcond . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 50
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 23

   20 cond: LEFT_PAREN . expr RIGHT_PAREN
   21     | LEFT_PAREN . expr RIGHT_PAREN NEWLINE

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 51


State 24

   17 statement: WHILE cond . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 52
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 25

   26 expr: SYMBOL .
   44     | SYMBOL . LEFT_ASSIGN expr

    LEFT_ASSIGN  shift, and go to state 17

    $default  reduce using rule 26 (expr)


State 26

   19 print_statement: PRINT_ expr . RIGHT_PAREN
   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    LT           shift, and go to state 32
    LE           shift, and go to state 33
    EQ           shift, and go to state 34
    NE           shift, and go to state 35
    GE           shift, and go to state 36
    GT           shift, and go to state 37
    AND2         shift, and go to state 38
    OR2          shift, and go to state 39
    PLUS         shift, and go to state 40
    MINUS        shift, and go to state 41
    STAR         shift, and go to state 42
    FSLASH       shift, and go to state 43
    COLON        shift, and go to state 44
    RIGHT_PAREN  shift, and go to state 53


State 27

   30 expr: LEFT_PAREN expr_or_assign . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 54


State 28

    4 exprlist: exprlist . SEMICOLON expr_or_assign
    5         | exprlist . SEMICOLON
    6         | exprlist . NEWLINE expr_or_assign
    7         | exprlist . NEWLINE
    8         | exprlist . NEWLINE print_statement
    9         | exprlist . SEMICOLON print_statement
   29 expr: LEFT_CURLY exprlist . RIGHT_CURLY

    NEWLINE      shift, and go to state 30
    SEMICOLON    shift, and go to state 31
    RIGHT_CURLY  shift, and go to state 55


State 29

    0 $accept: start $end .

    $default  accept


State 30

    6 exprlist: exprlist NEWLINE . expr_or_assign
    7         | exprlist NEWLINE .
    8         | exprlist NEWLINE . print_statement

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    PRINT_      shift, and go to state 7
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    $default  reduce using rule 7 (exprlist)

    expr_or_assign   go to state 56
    statement        go to state 13
    equal_assign     go to state 14
    print_statement  go to state 57
    expr             go to state 16


State 31

    4 exprlist: exprlist SEMICOLON . expr_or_assign
    5         | exprlist SEMICOLON .
    9         | exprlist SEMICOLON . print_statement

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    PRINT_      shift, and go to state 7
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    $default  reduce using rule 5 (exprlist)

    expr_or_assign   go to state 58
    statement        go to state 13
    equal_assign     go to state 14
    print_statement  go to state 59
    expr             go to state 16


State 32

   36 expr: expr LT . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 60


State 33

   37 expr: expr LE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 61


State 34

   38 expr: expr EQ . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 62


State 35

   39 expr: expr NE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 63


State 36

   40 expr: expr GE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 64


State 37

   41 expr: expr GT . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 65


State 38

   42 expr: expr AND2 . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 66


State 39

   43 expr: expr OR2 . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 67


State 40

   32 expr: expr PLUS . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 68


State 41

   33 expr: expr MINUS . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 69


State 42

   34 expr: expr STAR . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 70


State 43

   35 expr: expr FSLASH . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 71


State 44

   31 expr: expr COLON . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 72


State 45

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr
   44     | SYMBOL LEFT_ASSIGN expr .

    LT      shift, and go to state 32
    LE      shift, and go to state 33
    EQ      shift, and go to state 34
    NE      shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    AND2    shift, and go to state 38
    OR2     shift, and go to state 39
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    $default  reduce using rule 44 (expr)


State 46

   18 equal_assign: SYMBOL EQ_ASSIGN expr_or_assign .

    $default  reduce using rule 18 (equal_assign)


State 47

   22 ifcond: LEFT_PAREN expr . RIGHT_PAREN
   23       | LEFT_PAREN expr . RIGHT_PAREN NEWLINE
   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    LT           shift, and go to state 32
    LE           shift, and go to state 33
    EQ           shift, and go to state 34
    NE           shift, and go to state 35
    GE           shift, and go to state 36
    GT           shift, and go to state 37
    AND2         shift, and go to state 38
    OR2          shift, and go to state 39
    PLUS         shift, and go to state 40
    MINUS        shift, and go to state 41
    STAR         shift, and go to state 42
    FSLASH       shift, and go to state 43
    COLON        shift, and go to state 44
    RIGHT_PAREN  shift, and go to state 73


State 48

   14 statement: IF ifcond expr_or_assign .
   15          | IF ifcond expr_or_assign . ELSE expr_or_assign

    ELSE  shift, and go to state 74

    $default  reduce using rule 14 (statement)


State 49

   24 forcond: LEFT_PAREN SYMBOL . IN expr RIGHT_PAREN
   25        | LEFT_PAREN SYMBOL . IN expr RIGHT_PAREN NEWLINE

    IN  shift, and go to state 75


State 50

   16 statement: FOR forcond expr_or_assign .

    $default  reduce using rule 16 (statement)


State 51

   20 cond: LEFT_PAREN expr . RIGHT_PAREN
   21     | LEFT_PAREN expr . RIGHT_PAREN NEWLINE
   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    LT           shift, and go to state 32
    LE           shift, and go to state 33
    EQ           shift, and go to state 34
    NE           shift, and go to state 35
    GE           shift, and go to state 36
    GT           shift, and go to state 37
    AND2         shift, and go to state 38
    OR2          shift, and go to state 39
    PLUS         shift, and go to state 40
    MINUS        shift, and go to state 41
    STAR         shift, and go to state 42
    FSLASH       shift, and go to state 43
    COLON        shift, and go to state 44
    RIGHT_PAREN  shift, and go to state 76


State 52

   17 statement: WHILE cond expr_or_assign .

    $default  reduce using rule 17 (statement)


State 53

   19 print_statement: PRINT_ expr RIGHT_PAREN .

    $default  reduce using rule 19 (print_statement)


State 54

   30 expr: LEFT_PAREN expr_or_assign RIGHT_PAREN .

    $default  reduce using rule 30 (expr)


State 55

   29 expr: LEFT_CURLY exprlist RIGHT_CURLY .

    $default  reduce using rule 29 (expr)


State 56

    6 exprlist: exprlist NEWLINE expr_or_assign .

    $default  reduce using rule 6 (exprlist)


State 57

    8 exprlist: exprlist NEWLINE print_statement .

    $default  reduce using rule 8 (exprlist)


State 58

    4 exprlist: exprlist SEMICOLON expr_or_assign .

    $default  reduce using rule 4 (exprlist)


State 59

    9 exprlist: exprlist SEMICOLON print_statement .

    $default  reduce using rule 9 (exprlist)


State 60

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   36     | expr LT expr .
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 36 (expr)


State 61

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   37     | expr LE expr .
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 37 (expr)


State 62

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   38     | expr EQ expr .
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 38 (expr)


State 63

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   39     | expr NE expr .
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 39 (expr)


State 64

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   40     | expr GE expr .
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 40 (expr)


State 65

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   41     | expr GT expr .
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 41 (expr)


State 66

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   42     | expr AND2 expr .
   43     | expr . OR2 expr

    LT      shift, and go to state 32
    LE      shift, and go to state 33
    EQ      shift, and go to state 34
    NE      shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    $default  reduce using rule 42 (expr)


State 67

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr
   43     | expr OR2 expr .

    LT      shift, and go to state 32
    LE      shift, and go to state 33
    EQ      shift, and go to state 34
    NE      shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    AND2    shift, and go to state 38
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    $default  reduce using rule 43 (expr)


State 68

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   32     | expr PLUS expr .
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    $default  reduce using rule 32 (expr)


State 69

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   33     | expr MINUS expr .
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    STAR    shift, and go to state 42
    FSLASH  shift, and go to state 43
    COLON   shift, and go to state 44

    $default  reduce using rule 33 (expr)


State 70

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   34     | expr STAR expr .
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    COLON  shift, and go to state 44

    $default  reduce using rule 34 (expr)


State 71

   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   35     | expr FSLASH expr .
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    COLON  shift, and go to state 44

    $default  reduce using rule 35 (expr)


State 72

   31 expr: expr . COLON expr
   31     | expr COLON expr .
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    $default  reduce using rule 31 (expr)


State 73

   22 ifcond: LEFT_PAREN expr RIGHT_PAREN .
   23       | LEFT_PAREN expr RIGHT_PAREN . NEWLINE

    NEWLINE  shift, and go to state 77

    $default  reduce using rule 22 (ifcond)


State 74

   15 statement: IF ifcond expr_or_assign ELSE . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 78
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 75

   24 forcond: LEFT_PAREN SYMBOL IN . expr RIGHT_PAREN
   25        | LEFT_PAREN SYMBOL IN . expr RIGHT_PAREN NEWLINE

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 25
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 79


State 76

   20 cond: LEFT_PAREN expr RIGHT_PAREN .
   21     | LEFT_PAREN expr RIGHT_PAREN . NEWLINE

    NEWLINE  shift, and go to state 80

    $default  reduce using rule 20 (cond)


State 77

   23 ifcond: LEFT_PAREN expr RIGHT_PAREN NEWLINE .

    $default  reduce using rule 23 (ifcond)


State 78

   15 statement: IF ifcond expr_or_assign ELSE expr_or_assign .

    $default  reduce using rule 15 (statement)


State 79

   24 forcond: LEFT_PAREN SYMBOL IN expr . RIGHT_PAREN
   25        | LEFT_PAREN SYMBOL IN expr . RIGHT_PAREN NEWLINE
   31 expr: expr . COLON expr
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . STAR expr
   35     | expr . FSLASH expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . EQ expr
   39     | expr . NE expr
   40     | expr . GE expr
   41     | expr . GT expr
   42     | expr . AND2 expr
   43     | expr . OR2 expr

    LT           shift, and go to state 32
    LE           shift, and go to state 33
    EQ           shift, and go to state 34
    NE           shift, and go to state 35
    GE           shift, and go to state 36
    GT           shift, and go to state 37
    AND2         shift, and go to state 38
    OR2          shift, and go to state 39
    PLUS         shift, and go to state 40
    MINUS        shift, and go to state 41
    STAR         shift, and go to state 42
    FSLASH       shift, and go to state 43
    COLON        shift, and go to state 44
    RIGHT_PAREN  shift, and go to state 81


State 80

   21 cond: LEFT_PAREN expr RIGHT_PAREN NEWLINE .

    $default  reduce using rule 21 (cond)


State 81

   24 forcond: LEFT_PAREN SYMBOL IN expr RIGHT_PAREN .
   25        | LEFT_PAREN SYMBOL IN expr RIGHT_PAREN . NEWLINE

    NEWLINE  shift, and go to state 82

    $default  reduce using rule 24 (forcond)


State 82

   25 forcond: LEFT_PAREN SYMBOL IN expr RIGHT_PAREN NEWLINE .

    $default  reduce using rule 25 (forcond)
